import sys
try:
	import gmpy2
except ImportError:
	print("Install gmpy2 first to run this program")
	sys.exit()

n=374159235470172130988938196520880526947952521620932362050308663243595788308583992120881359365258949723819911758198013202644666489247987314025169670926273213367237020188587742716017314320191350666762541039238241984934473188656610615918474673963331992408750047451253205158436452814354564283003696666945950908549197175404580533132142111356931324330631843602412540295482841975783884766801266552337129105407869020730226041538750535628619717708838029286366761470986056335230171148734027536820544543251801093230809186222940806718221638845816521738601843083746103374974120575519418797642878012234163709518203946599836959811
n=hex(n)
e=3
cipher=2205316413931134031046440767620541984801091216351222789180582564557328762455422721368029531360076729972211412236072921577317264715424950823091382203435489460522094689149595951010342662368347987862878338851038892082799389023900415351164773 
import gmpy2
 
#f = open('cipher','rb')
#cipher = int(f.read().encode('hex'),16)
with gmpy2.local_context(gmpy2.context(), precision=800) as ctx:
 ctx.precision += 800
 root = gmpy2.cbrt(cipher)

try:
	print(str('%x' % + int(root)).decode('hex'))
except AttributeError:
print(bytes.fromhex(str('%x' % + int(root))).decode('utf-8'))

p=158754754453572149934540516805858365529
q=158309627169945915479670296299307350953193 
t=(p-1)*(q-1)
import gmpy2
d = gmpy2.invert(e,t)

# Decryption
decimalmessage = pow(c,d,n)
print(decimalmessage)
hexmessage= hex(decimalmessage)
print(hexmessage)
print(hexmessage[2:].decode("hex"))
print(bytes.fromhex(hexmessage).decode())
